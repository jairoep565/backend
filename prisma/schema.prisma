// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int      @id @default(autoincrement())
  correo        String
  password      String
  nombre        String
  token         String
  estado        Boolean
  ventas        Venta[]        
  calificaciones Calificacion[] 
}

model Noticia {
  id      Int    @id @default(autoincrement())
  titulo  String
  texto   String
  activo  Boolean
}

model Venta {
  id           Int      @id @default(autoincrement())
  fecha        DateTime
  codigo       String
  montoPagado  Float
  usuarioId    Int
  juegoId      Int
  usuario      Usuario @relation(fields: [usuarioId], references: [id]) 
  juego        Juego   @relation(fields: [juegoId], references: [id])   
}

model Juego {
  id           Int         @id @default(autoincrement())
  nombre       String
  precio       Float
  estaOferta   Boolean
  estado       Boolean
  categoriaId  Int
  plataforma   Plataforma[] @relation("JuegoPlataformas") 
  categoria    Categoria   @relation(fields: [categoriaId], references: [id]) 
  ventas       Venta[]     
  calificaciones Calificacion[] 
}

model Plataforma {
  id      Int    @id @default(autoincrement())
  nombre  String
  juegos  Juego[] @relation("JuegoPlataformas") 
}

model Categoria {
  id      Int    @id @default(autoincrement())
  nombre  String
  juegos  Juego[] 
}

model Calificacion {
  id        Int     @id @default(autoincrement())
  valoracion Int
  comentario String
  juegoId    Int
  usuarioId  Int
  juego      Juego   @relation(fields: [juegoId], references: [id]) 
  usuario    Usuario @relation(fields: [usuarioId], references: [id]) 
}